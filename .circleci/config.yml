# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.1
executors:
  my-executor:
     docker:
       - image: cimg/openjdk:15.0-browsers
       - image: cimg/python:3.11-browsers
working_directory: ~/automation-framework-integration
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:15.0-browsers
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - browser-tools/install-browser-tools:
            chrome-version: 109.0.5414.74
      # Checkout the code as the first step.
      - checkout
      # Build and run the tests
      - run:
          name: Build and run the tests
          command: |
            chmod 777 drivers/linux/chromedriver
            mvn clean compile test
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: target
          # Must be relative path from root
          paths:
            - TEST-junit-jupiter.xml
  install-trcli-and-parse-results:
    docker:
      - image: cimg/python:3.11-browsers
    steps:
     - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./automation-framework-integration
     - run:
          name: Install TR CLI and upload the test results to Testrail
          command: |
            pip install trcli
            trcli -y \
             -h https://testrail101.testrail.io/ \
             --project "TestRail CLI code-first" \
             -u $USER_EMAIL \
             -p $PASSWORD \
             parse_junit \
             --title "Automated Tests from CircleCI workflow" \
             -f "./automation-framework-integration/TEST-junit-jupiter.xml"
# Invoke jobs via workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - install-trcli-and-parse-results:
         requires:
            - build-and-test
